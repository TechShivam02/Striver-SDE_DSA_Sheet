 vector<int> twoSum(vector<int> &arr, int target) {
        
        
        
        /*
        vector<int> ans;
        
        int n=arr.size();
        
        
        
        for(int i=0;i<n;i++){
            for(int j=i+1 ;j<n;j++){
                if(arr[i] + arr[j] == target){
                    ans.push_back(i);
                    ans.push_back(j);
                    
                    return ans;
                    
                }
            }
            
        }
        [-1,-2,-3,-4,-5]
-8
        
        return ans;
        
        */
        
        
//         vector<int> ans;
        
//         int n=arr.size();
        
        
//         map<int,int> mp;  // key,index
        
//         for(int i=0;i<n;i++){
//             mp[arr[i]] = i;
//         }
        
        
        
//         for(int i=0;i<n;i++){
//             int ele = arr[i];
            
//             int need = target-ele;
            
//             if( mp.find(need) != mp.end() && mp[need] !=i){   // it means , it found 
//                 ans.push_back(i);
//                 ans.push_back(mp[need]);
                
                
//                 return ans;
                
//             }

            
//         }
        
//         return ans;
        
        
        
        
        vector<int> ans;
        
        int n=arr.size();
        
        
        map<int,int> mp;  // key,index
        
        for(int i=0;i<n;i++){
            mp[arr[i]] = i;
        }
        
        
        
        for(int i=0;i<n;i++){
            int ele = arr[i];
            
            int need = target-ele;
            
            if( mp.find(need) != mp.end() && mp[need] !=i){   // it means , it found 
                ans.push_back(i);
                ans.push_back(mp[need]);
                
                
                return ans;
                
            }

            
        }
        
        return ans;
        
        
        
    }