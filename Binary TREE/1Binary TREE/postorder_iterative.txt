void solve(TreeNode* root , vector<int> &ans){
        if(root == NULL){
            return;
        }
        
        solve(root->left , ans);
        
        solve(root->right , ans);
        
        
        if(root){
             ans.push_back(root->val);   
        }
        
    }
    vector<int> postorderTraversal(TreeNode* root) {
        
        
        vector<int> ans;
        
        if(root == NULL){
            return ans;
        }
        
        if(root->left == NULL && root->right == NULL){
            ans.push_back(root->val);
            return ans;
            
        }
        
        stack<TreeNode*> st1;
        stack<TreeNode*> st2;
        
        
        st1.push(root);
        
        while(!st1.empty()){
            
            TreeNode* temp = st1.top();
            st1.pop();
            
            
            if(temp != NULL){
                st2.push(temp);
            }
            
            if(temp->left != NULL){
                st1.push(temp->left);
            }
            
            if(temp->right != NULL){
                st1.push(temp->right);
            }
            
            
        }
        
        while(!st2.empty()){
            ans.push_back(st2.top()->val);
            
            st2.pop();
        }
        
        
        
        
        
        
        return ans;
        
    }