void  heapify(vector<int> &arr ,int n , int index){
        
        int largest = index;
        
        int left = 2*index+1;
        int right = 2*index+2;
        
        if(left < n && arr[left] > arr[largest]){
            largest = left;
        }
        
        if(right < n && arr[right] > arr[largest]){
            largest = right;
        }
        
        
        if(largest != index){
            swap(arr[largest] , arr[index]);
            
            heapify(arr , n , largest);
            
        }
        
    }
    
    
    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
        // your code here
        
        
        vector<int> ans;
        
        // merze two vec 
        for(auto i : a){
            ans.push_back(i);
        }
        
        for(auto i : b){
            ans.push_back(i);
        }
        
        
        // creating max heap
        
        int size = ans.size();
        
        for(int i=size/2 ; i>=0 ; i--){
            heapify(ans , size , i);
        }
        
        
        return ans;
        
        
        
        
    }